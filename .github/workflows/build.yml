# name: Rust

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# env:
#   CLIENT_URL: http://localhost:516
#   DATABASE_SCHEMA_FILE_PATH: schema.sql

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Start containers
#         run: docker build .

#       - name: Start containers
#         run: docker save -o web.tar a-server-rs-web-1

#       - name: Upload artifacts to the remote
#         run: |
#           scp -i ${{ env.SSH_KEY_PATH }} docker-compose.yml web.tar ${{ env.AWS_REMOTE_USER }}@${{ env.AWS_REMOTE_HOST }}:.

#       - name: executing remote ssh commands using password
#         uses: appleboy/ssh-action@master
#         env:
#           CLIENT_URL: ${{ env.CLIENT_URL }}
#           SECRET_KEY: ${{ secrets.SECRET_KEY }}
#           DATABASE_URL: postgres://${{secrets.DB_USERNAME}}:${{secrets.DB_PASSWORD}}@db
#           DATABASE_SCHEMA_FILE_PATH: ${{ env.DATABASE_SCHEMA_FILE_PATH }}
#           MAILGUN_KEY: ${{ secrets.MAILGUN_KEY }}
#           MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USER }}
#           key: ${{ secrets.SSH_KEY }}
#           envs: |
#             CLIENT_URL,
#             SECRET_KEY,
#             DATABASE_URL,
#             DATABASE_SCHEMA_FILE_PATH,
#             MAILGUN_KEY,
#             AWS_REGION,
#             MAILGUN_DOMAIN
#           script: |
#             docker load --input web.tar
#             docker-compose down
#             docker-compose up -d
